/*Esse questionário permite ao usuário a criação de sua próprias
perguntas e respostas. (30% concluído)

Atualizações:
Adicionado tratamento de erro em todas as entradas de pergutas (try, catch)
Adicionado a opção de alteração de perguntas
Adicionado goto para pular etapadas de tratamento de erros
*/
using System;

class project
{	
	
	static void Main()
	{
		string[] perguntas = new string[100];
		string[] respostas = new string[100];
		int NumPerg = 0;
		int alteracao = 1;
		int p = 0; //contador
		bool retorno = true;
		
		
	
		
		
		retorno: // Ponto de retorno do erro
		Console.Clear();
		Console.WriteLine("Nova versao");
		Console.WriteLine("Digite em números quantas perguntas deseja fazer?");
		
		try //Tratamento de erros, Exception;
		{
			NumPerg = int.Parse(Console.ReadLine()); //Aqui é definido a quantidade de perguntas
			if(NumPerg <= 0 || NumPerg > 100){
				Console.WriteLine("Os numeros devem ser maiores que 0");
				Console.WriteLine("e devem ser menores que 101");
				Console.WriteLine("Aperte uma tecla");
				Console.ReadKey();
				goto retorno;		
			}
		}	
		catch (Exception)
		{
			Console.WriteLine("Use apenas numeros");
			Console.WriteLine("Aperte uma tecla");
			Console.ReadKey();
			goto retorno;
		}
		
		
		
		
		
		Console.Clear();
		for(int i = 0; i < NumPerg; i++) //Limpa a tela e começa o loop para receber as perguntas
		{ 
			if(i > 0)
			{
				Console.WriteLine("Já pode digitar a próxima: ");
			}
			Console.WriteLine("Digite sua(s) pergunta(s)");
			perguntas[i] = Console.ReadLine();
		}




		
		Console.Clear(); //Desmostra as perguntas feitas
		Console.WriteLine("Perguntas Finalizadas"); 
		Console.WriteLine("-------------------------");
		for(int i = 0; i < NumPerg; i++)
		{
			Console.WriteLine("Pergunta numero {0}:\n{1}",p,perguntas[p++]);
		}
	
	
		
		
		
		
		
		retorno2://2º tratamento de erros + alteração de perguntas
		Console.Clear();
		Console.WriteLine("Para alterar alguma pergunta, digite o número dela");
	
		try
		{
			Console.WriteLine("Para não alterar nada, digite: 1000 e tecle enter");
			alteracao = int.Parse(Console.ReadLine());
				
			if(alteracao == 1000){goto avanca;} //Pula e exceção de erros, vai pra linha 111
				
				
			if(alteracao <=0 || alteracao > NumPerg )
			{
				Console.WriteLine("Use apenas os numeros a partir de");
				Console.WriteLine("1 até {0}", NumPerg);
				Console.ReadKey();
				goto retorno2;
				
			}
		}
		catch(Exception)
		{
			Console.WriteLine("Use apenas numeros");
			Console.WriteLine("Aperte uma tecla");
			Console.ReadKey();
			goto retorno2;
		}
	
	
	
	
	
	
		
		
		
		
		
		retorno3:
		while(alteracao <= NumPerg || retorno == true)
		{
			Console.WriteLine("Escreva a nova pergunta");
			perguntas[alteracao] = Console.ReadLine();
			Console.WriteLine("Para alterar outra pergunta digite seu numero");
			Console.WriteLine("Para não alterar mais nada digite 1000");
			try
			{
				alteracao = int.Parse(Console.ReadLine());
				Console.WriteLine("Use apenas os numeros a partir deeeeeeee");
				Console.WriteLine("1 até {0}", NumPerg);
				Console.ReadKey();
				goto retorno3;
				
				
			}
			catch
			{
				Console.WriteLine("Use apenas numeros");
				Console.WriteLine("Aperte uma tecla");
				Console.ReadKey();
				goto retorno3;
			}
			
			
		}
		
		
		avanca: //
		
		p = 0; //retorna o vetor para a primeira posição
		
		Console.Clear();
		
		Console.WriteLine("Perguntas Finalizadas e Salvas"); //Segunda tabela de perguntas
		Console.WriteLine("-------------------------");
		for(int i = 0; i < NumPerg; i++) //Desmostra as perguntas feitas
		{
			Console.WriteLine("Pergunta numero {0}:\n{1}",p,perguntas[p++]);
		}
		
		
		Console.ReadKey();
		
		
	

		

	}
}
